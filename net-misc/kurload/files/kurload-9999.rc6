#!/sbin/openrc-run

LOG_LEVEL=${LOG_LEVEL:="6"}
COLORFUL_OUTPUT=${COLORFUL_OUTPUT:="0"}
LISTEN_PORT=${LISTEN_PORT:="1337"}
TIMED_LISTEN_PORT=${TIMED_LISTEN_PORT:="1338"}
SSL_LISTEN_PORT=${SSL_LISTEN_PORT:="0"}
TIMED_SSL_LISTEN_PORT=${TIMED_SSL_LISTEN_PORT:="0"}
CERT_FILE=${CERT_FILE:="/etc/kurload/kurload.cert"}
KEY_FILE=${KEY_FILE:="/etc/kurload/kurload.key"}
PEM_PASS_FILE=${PEM_PASS_FILE:=""}
MAX_SIZE=${MAX_SIZE:="1048576"}
MAX_TIMEOUT=${MAX_TIMEOUT:="60"}
TIMED_MAX_TIMEOUT=${TIMED_MAX_TIMEOUT:="3"}
MAX_CONNECTIONS=${MAX_CONNECTIONS:="10"}
DOMAIN=${DOMAIN:="http://kurload.kurwinet.pl"}
USER=${USER:="kurload"}
GROUP=${GROUP:="kurload"}
PID_FILE=${PID_FILE:="/var/run/kurload.pid"}
QUERY_LOG=${QUERY_LOG:="/var/log/kurload-query.log"}
PROGRAM_LOG=${PROGRAM_LOG:="/var/log/kurload.log"}
LIST_FILE=${LIST_FILE:="/etc/kurload-iplist"}
LIST_TYPE=${LIST_TYPE:="0"}
OUTPUT_DIR=${OUTPUT_DIR:="/var/lib/kurload"}
BIND_IP=${BIND_IP:="0.0.0.0"}

command=/usr/bin/kurload
colors=
ssl_listen_port=
timed_ssl_listen_port=
ssl_opts=

depend() {
    need net localmount
}

start_pre()
{
    ebegin "Checking configuration for kurload server"

    # if any of the ssl ports are enabled, then pass key and cert
    # file to kurload
    if [ ${SSL_LISTEN_PORT} -ne 0 ] ; then
        ssl_listen_port="--ssl-listen-port=${SSL_LISTEN_PORT}"
        ssl_opts="--key-file=${KEY_FILE} --cert-file=${CERT_FILE}"
    fi

    if [ ${TIMED_SSL_LISTEN_PORT} -ne 0 ] ; then
        timed_ssl_listen_port="--timed-ssl-listen-port=${TIMED_SSL_LISTEN_PORT}"
        ssl_opts="--key-file=${KEY_FILE} --cert-file=${CERT_FILE}"
    fi

    if [ "x${PEM_PASS_FILE}" != "x" ] ; then
        ssl_opts+=" --pem-pass-file=${PEM_PASS_FILE}"
    fi

    if [ "${COLORFUL_OUTPUT}" -eq "1" ] ; then
        colors="-c"
    fi

    # check if ${USER} and ${GROUP} exist in the system
    if ! /usr/bin/id -u ${USER} > /dev/null 2>&1 ; then
        eerror "User ${USER} doesn't exist in current system"
        eend 1 "failed to start kurload server"
        exit 1
    fi

    if ! /usr/bin/id -g ${GROUP} > /dev/null 2>&1 ; then
        eerror "Group ${GROUP} doesn't exist in current system"
        eend 1 "failed to start kurload server"
        exit 1
    fi

    # chcek if output directory exists and is writeable by configured user
    if [ ! -d "${OUTPUT_DIR}" ] ; then
        eerror "Output directory \"${OUTPUT_DIR}\" doesn\'t exist"
        eerror "You need to create it first before you can start server"
        eend 1 "failed to start kurload server"
        exit 1
    fi

    if /bin/su ${USER} -c "if [ -w \"${OUTPUT_DIR}\" ]; then exit 1; fi"; then
        eerror "Output directory \"${OUTPUT_DIR}\" is not writeable"
        eerror "for user ${USER}"
        eend 1 "failed to start kurload server"
        exit 1
    fi

    # create log files if they don't exist and set proper permissions
    if [ ! -f "${QUERY_LOG}" ] ; then
        /bin/touch "${QUERY_LOG}"
        /bin/chown ${USER} "${QUERY_LOG}"
        /bin/chgrp adm "${QUERY_LOG}"
        /bin/chmod 640 "${QUERY_LOG}"
    fi

    if [ ! -f "${PROGRAM_LOG}" ] ; then
        /bin/touch "${PROGRAM_LOG}"
        /bin/chown ${USER} "${PROGRAM_LOG}"
        /bin/chgrp adm "${PROGRAM_LOG}"
        /bin/chmod 640 "${PROGRAM_LOG}"
    fi

    eend 0
}

start() {
    ebegin "Starting kurload server"

    /sbin/start-stop-daemon --make-pidfile --pidfile "${PID_FILE}" \
        --start --background --user ${USER} --group ${GROUP} --name kurload \
        --exec ${command} -- \
        -l${LOG_LEVEL} ${colors} -i${LISTEN_PORT} -s${MAX_SIZE} \
        -t${MAX_TIMEOUT} -m${MAX_CONNECTIONS} -d"${DOMAIN}" -q"${QUERY_LOG}" \
        -p"${PROGRAM_LOG}" -o"${OUTPUT_DIR}" -T${LIST_TYPE} -L"${LIST_FILE}" \
        -b${BIND_IP} -u${USER} -g${GROUP} -M${TIMED_MAX_TIMEOUT} \
        ${ssl_listen_port} ${timed_ssl_listen_port} ${ssl_opts}
    eend $?
}

stop() {
    ebegin "Stopping kurload server"
    /sbin/start-stop-daemon --stop --signal 15 --pidfile "${PID_FILE}"
    eend $?
}
